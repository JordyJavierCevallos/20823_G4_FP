/*UNIVERSIDAD DE LAS FUERZAS ARMADAS
            ESPE       
PROYECTO DE FUNDAMENTOS DE PROGRAMACION
INTEGRANTES: JORDY CEVALLOS, ANA ULLOA, BRYAN MIGUITAMA
        PARQUEADERO AUTOMATIZADO*/

#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Estructura que representa un vehiculo
typedef struct {
    char placa[20];
    char horaEntrada[10];
    char horaSalida[10];
    float precioPagado;
} Vehiculo;

void convertirMayusculas(char *str) {
    for (int i = 0; str[i]; i++) {
        str[i] = toupper((unsigned char) str[i]);
    }
}

int buscarPorPlaca(Vehiculo lista[], int n, char placa[]) {
    for (int i = 0; i < n; i++) {
        if (strcmp(lista[i].placa, placa) == 0) {
            return i;
        }
    }
    return -1;
}

int convertirHoraAMinutos(const char *hora) {
    int h, m;
    sscanf(hora, "%d:%d", &h, &m);
    return h * 60 + m;
}

float calcularPrecio(char *entrada, char *salida) {
    int minutosEntrada = convertirHoraAMinutos(entrada);
    int minutosSalida = convertirHoraAMinutos(salida);
    int duracion = minutosSalida - minutosEntrada;

    if (duracion <= 15) return 0.0;
    if (duracion < 60) return 0.50;

    int horasCompletas = duracion / 60;
    int minutosRestantes = duracion % 60;
    float precio = horasCompletas * 0.75;

    if (minutosRestantes >= 30) {
        precio += 0.50;
    }

    return precio;
}

void mostrarVehiculo(Vehiculo v) {
    printf("\nPlaca: %s\n", v.placa);
    printf("Hora de entrada: %s\n", v.horaEntrada);
    if (strlen(v.horaSalida) > 0) {
        printf("Hora de salida: %s\n", v.horaSalida);
        printf("Precio pagado: $%.2f\n", v.precioPagado);
    } else {
        printf("Hora de salida: (Aun en parqueadero)\n");
    }
}

void registrarEntrada(Vehiculo parqueadero[], int *cantidad, int *puestosDisponibles) {
    if (*puestosDisponibles <= 0) {
        printf("Parqueadero lleno.\n");
        return;
    }

    Vehiculo nuevo;
    printf("Ingrese la placa del vehiculo: ");
    fgets(nuevo.placa, 20, stdin);
    nuevo.placa[strcspn(nuevo.placa, "\n")] = '\0';
    convertirMayusculas(nuevo.placa);

    for (int i = 0; i < *cantidad; i++) {
        if (strcmp(parqueadero[i].placa, nuevo.placa) == 0 && strlen(parqueadero[i].horaSalida) == 0) {
            printf("Advertencia: El vehiculo con placa %s ya esta registrado SIN SALIDA.\n", nuevo.placa);
            return;
        }
    }

    printf("Ingrese la hora de entrada (HH:MM): ");
    fgets(nuevo.horaEntrada, 10, stdin);
    nuevo.horaEntrada[strcspn(nuevo.horaEntrada, "\n")] = '\0';

    strcpy(nuevo.horaSalida, "");
    nuevo.precioPagado = 0.0;

    parqueadero[*cantidad] = nuevo;
    (*cantidad)++;
    (*puestosDisponibles)--;

    // Guardar en archivo
    FILE *archivo = fopen("registro_parqueadero.txt", "a");
    if (archivo != NULL) {
        fprintf(archivo, "ENTRADA | Placa: %s | Hora entrada: %s\n", nuevo.placa, nuevo.horaEntrada);
        fclose(archivo);
    }

    printf("Entrada registrada correctamente.\n");
}

void registrarSalida(Vehiculo parqueadero[], int *puestosDisponibles, int cantidad) {
    char placaBuscada[20];
    printf("Ingrese la placa: ");
    fgets(placaBuscada, 20, stdin);
    placaBuscada[strcspn(placaBuscada, "\n")] = '\0';
    convertirMayusculas(placaBuscada);

    int pos = buscarPorPlaca(parqueadero, cantidad, placaBuscada);
    if (pos == -1) {
        printf("Vehiculo no encontrado.\n");
        return;
    }

    if (strlen(parqueadero[pos].horaSalida) != 0) {
        printf("El vehiculo ya tiene salida registrada.\n");
        return;
    }

    printf("Ingrese la hora de salida (HH:MM): ");
    fgets(parqueadero[pos].horaSalida, 10, stdin);
    parqueadero[pos].horaSalida[strcspn(parqueadero[pos].horaSalida, "\n")] = '\0';

    float precio = calcularPrecio(parqueadero[pos].horaEntrada, parqueadero[pos].horaSalida);
    parqueadero[pos].precioPagado = precio;

    printf("Duracion: %s - %s\n", parqueadero[pos].horaEntrada, parqueadero[pos].horaSalida);
    printf("Precio a pagar: $%.2f\n", precio);

    (*puestosDisponibles)++;

    // Guardar en archivo
    FILE *archivo = fopen("registro_parqueadero.txt", "a");
    if (archivo != NULL) {
        fprintf(archivo, "SALIDA | Placa: %s | Entrada: %s | Salida: %s | Pago: $%.2f\n",
                parqueadero[pos].placa,
                parqueadero[pos].horaEntrada,
                parqueadero[pos].horaSalida,
                parqueadero[pos].precioPagado);
        fclose(archivo);
    }
}

void finalizarDia(Vehiculo parqueadero[], int cantidad) {
    float total = 0.0;
    printf("\n--- Cierre del Dia ---\n");

    FILE *archivo = fopen("registro_parqueadero.txt", "a");
    if (archivo != NULL) {
        fprintf(archivo, "\n--- CIERRE DEL DIA ---\n");
    }

    for (int i = 0; i < cantidad; i++) {
        if (parqueadero[i].precioPagado > 0) {
            printf("Placa: %s - Pago: $%.2f\n", parqueadero[i].placa, parqueadero[i].precioPagado);
            total += parqueadero[i].precioPagado;

            if (archivo != NULL) {
                fprintf(archivo, "CIERRE | Placa: %s | Pago: $%.2f\n", parqueadero[i].placa, parqueadero[i].precioPagado);
            }
        }
    }

    if (archivo != NULL) {
        fprintf(archivo, "TOTAL RECAUDADO: $%.2f\n\n", total);
        fclose(archivo);
    }

    printf("Total recaudado en el dia: $%.2f\n", total);
}

// PROGRAMA PRINCIPAL
int main() {
    Vehiculo parqueadero[100];
    int cantidad = 0;
    int puestosDisponibles = 60;
    int opcion;

    while (1) {
        printf("\n--- SISTEMA DE PARQUEADERO ---\n");
        printf("Puestos disponibles: %d / 60\n", puestosDisponibles);
        printf("1. Ingresar vehiculo\n");
        printf("2. Registrar salida\n");
        printf("3. Mostrar vehiculos\n");
        printf("4. Salir\n");
        printf("5. Finalizar dia\n");
        printf("Opcion: ");
        scanf("%d", &opcion);
        getchar(); // limpia el buffer

        if (opcion == 1) {
            registrarEntrada(parqueadero, &cantidad, &puestosDisponibles);
        } else if (opcion == 2) {
            registrarSalida(parqueadero, &puestosDisponibles, cantidad);
        } else if (opcion == 3) {
            for (int i = 0; i < cantidad; i++) {
                if (strlen(parqueadero[i].placa) > 0)
                    mostrarVehiculo(parqueadero[i]);
            }
        } else if (opcion == 4) {
            printf("Saliendo del sistema...\n");
            break;
        } else if (opcion == 5) {
            finalizarDia(parqueadero, cantidad);
        } else {
            printf("Opcion invalida.\n");
        }
    }

    return 0;
}
