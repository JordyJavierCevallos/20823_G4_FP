/*UNIVERSIDAD DE LAS FUERZAS ARMADAS
            ESPE       
PROYECTO DE FUNDAMENTOS DE PROGRAMACION
INTEGRANTES: JORDY CEVALLOS, ANA ULLOA, BRYAN MIGUITAMA
        PARQUEADERO AUTOMATIZADO*/

#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Estructura que representa un vehiculo
typedef struct {
    char placa[10];
    char horaEntrada[5];
    char horaSalida[5];
    float precioPagado; 
} Vehiculo;

// Convierte cadena a mayusculas
void convertirMayusculas(char *str) {
    for (int i = 0; str[i]; i++) {
        str[i] = toupper((unsigned char) str[i]);
    }
}

// Busca un vehiculo por su placa en la lista
int buscarPorPlaca(Vehiculo lista[], int n, char placa[]) {
    for (int i = 0; i < n; i++) {
        if (strcmp(lista[i].placa, placa) == 0) {
            return i; // Si encuentra, retorna la posicion
        }
    }
    return -1; // Si no encuentra, retorna -1
}

// Convierte "HH:MM" en minutos desde medianoche
int convertirHoraAMinutos(const char *hora) {
    int h, m;
    sscanf(hora, "%d:%d", &h, &m);
    return h * 60 + m;
}

// Calcula el precio segun el tiempo de permanencia
float calcularPrecio(char *entrada, char *salida) {
    int minutosEntrada = convertirHoraAMinutos(entrada);
    int minutosSalida = convertirHoraAMinutos(salida);
    int duracion = minutosSalida - minutosEntrada;

    if (duracion <= 15) return 0.0;
    if (duracion < 60) return 0.50;

    int horasCompletas = duracion / 60;
    int minutosRestantes = duracion % 60;
    float precio = horasCompletas * 0.75;

    if (minutosRestantes >= 30) {
        precio += 0.50;
    }

    return precio;
}

// Muestra la informacion de un vehiculo
void mostrarVehiculo(Vehiculo v) {
    printf("\nPlaca: %s\n", v.placa);
    printf("Hora de entrada: %s\n", v.horaEntrada);
    if (strlen(v.horaSalida) > 0) {
        printf("Hora de salida: %s\n", v.horaSalida);
        printf("Precio pagado: $%.2f\n", v.precioPagado);
    }
    else
        printf("Hora de salida: (Aun en parqueadero)\n");
}

// Registrar entrada con validacion de placa duplicada sin salida
void registrarEntrada(Vehiculo parqueadero[], int *cantidad, int *puestosDisponibles) {
    if (*puestosDisponibles <= 0) {
        printf("Parqueadero lleno.\n");
        return;
    }
